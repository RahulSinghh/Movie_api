###############################
Scaling The request
###############################


i) The important point to note in our database is,  only certain users with Admin access can edit the movies, So most of the request hitting the server would be read only request and Search request

ii) We can maintain a copy of master and slave database, wherein master database can take all the write request and copy it to the slave database (read database) at specified period of time maybe at the end of the day

iii) Creating a seperate layer for Server and database would be a good idea, so that load can be distributed according to their functionality. We should always close the database instance when not needed, this can help us to reduce request overhead.

iv) Sharding would be a good idea, where we can categorize the movies according to the region like bollywood movies , Hollywood movies , Tollywood movies etc , ie categorizing according the popularity of a movie in a region.

v) Caching could improve the search request where in we can cache most popular searches like movies with imdb rating > 8.0, movies according to their popularity and recently released movies. Since caching is expensive we would try to cache most popular requst only.

vi) We should never hard code the environment variable this will help us in distributing our code, and deploying is faster when needed.

In short CDN, sharding and caching , decoupling layers can help us scale our network.
